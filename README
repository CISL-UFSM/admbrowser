============
 WCGBrowser
============

Author:  Alan D Moore (http://www.alandmoore.com, e-mail me_AT_alandmoore_DOT_com)


Description
===========

WCGBrowser is a browser I wrote specifically for use on web kiosks.  It's based on pyqt and webkit, and is designed to make lock-down very simple and painless.

It was originally conceived for use in library catalog terminals, when it became clear that browsers with ever-growing feature lists like Firefox and Chrome were too much work to lock down correctly and completely.  It was also designed to be easily configurable using a simple text file that can be hand-edited in a terminal over ssh across a slow WAN, so no databases, XML, or crazy binaries here.  

Features
========

- Up-to-date webkit rendering
- text-based, YAML configuration
- (Optional) inactivity timeout
- Popups/open-in-new-window can be disabled
- Minimal, no-clutter interface simple for the general public.
- configurable handling of external MIME-types (PDF, etc)

Requirements
============

- Python 2.6 or higher (should work with python 3.x) 
- PyQT4, preferably 4.6 or higher
- Python YAML library (http://pyyaml.org)

It should work on any platform, but it's only been tested on Debian (Squeeze) and Ubuntu (Lucid Lynx or higher)


Usage
=====

The included wcgbrowser.yaml file shows an actual configuration that I use at our public library system.  To use it,  copy it to /etc/wcgbrowser.yaml, ~/.wcgbrowser.yaml, or specify it with the -c (--config-file) switch.  You can make the browser.py executable, or launch it using python, like so:

python browser.py

The --help switch should give you an up-to-date summary of the available command-line switches, but here are a few important ones:

=================    =====================================================================================================================================
 Switch              Description
=================    =====================================================================================================================================
-l, --url            The "start location" for the browser.  This is the initial URL it will load, and where it will return when reset.
-f, --fullscreen     Makes the window fill the screen, no window decorations
-n, --no-navigation  Turn off the navigation panel (back, forward, home, shortcuts, etc).  Make sure your actual web application is fully navigable!
-c, --config-file    Specify a configuration file to use
-d, --debug          Provide debugging output
-t, --timeout        The timeout for the inactivity monitor.  After this many seconds of inactivity, reset the browser 
-i, --icon-theme     The icon theme to use.  You'll need to install these themes yourself
-z, --zoom           The default zoom factor for content.  0 ignores this.  1 is default, 2 would be double size, 0.5 would be half-size, etc.
-p, --popups         Enable the creation of new windows when a link is clicked that opens in a new window, or javascript tries to open a window
-u, --user	     Set the default username to be sent when a site requests authentication
-w, --password	     Set the default password to be sent when a site requests authentication
=================    =====================================================================================================================================


Bugs and Limitations
====================

- SSL certificates don't work.  Right now WCGBrowser just ignores certificate errors completely.  I'd like to see this functioning.
- Session authentication and data (e.g. PHP sessions) is not passed to child windows.  Would love some help with this.
- There is no password dialog when a page requests authentication.  You can set a single user/password set in the config file to be sent whenever a site does request it, or provide auth credentials in the URL (in a bookmark/start_url).  I don't think the latter authentication gets passed to child windows, sadly.
- Mime type handling is a little rough still, and you're bound to get 404 or network errors attempting to download documents when it's disabled.

Contributing
============

Contributions are welcome, so long as they are consistent with the spirit and intent of the browser -- that is, they are features useful in a kiosk situation, and keep the browser simple to configure.  I would also prefer that changes to features or behavior are opt-in (require a switch to enable them), unless it just makes no sense to do it that way.

License
=======

WCGBrowser is released under the terms of the GNU GPL v3.
